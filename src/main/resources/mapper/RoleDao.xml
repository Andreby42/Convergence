<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.convergence.dao.RoleDao">
	<resultMap id="BaseResultMap" type="com.convergence.domain.RoleDTO">
		<id column="role_id" property="roleId" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="role_key" property="roleKey" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		  <collection property="resources" column="role_id"
			ofType="com.convergence.domain.ResourceDTO" select="com.convergence.dao.ResourceDao.selectResourcesByRoleId"></collection>  
	</resultMap>
	<sql id="Base_Column_List">
		role_id, create_time, description, name, role_key, status, update_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from role
		where role_id = #{roleId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from role
		where role_id = #{roleId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.convergence.domain.RoleDTO">
		insert into role (role_id, create_time, description,
		name, role_key, status,
		update_time)
		values (#{roleId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
		#{description,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR}, #{roleKey,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
		#{updateTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.convergence.domain.RoleDTO">
		insert into role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				role_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="roleKey != null">
				role_key,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="roleKey != null">
				#{roleKey,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.convergence.domain.RoleDTO">
		update role
		<set>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="roleKey != null">
				role_key = #{roleKey,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where role_id = #{roleId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.convergence.domain.RoleDTO">
		update role
		set create_time = #{createTime,jdbcType=TIMESTAMP},
		description = #{description,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		role_key = #{roleKey,jdbcType=VARCHAR},
		status = #{status,jdbcType=INTEGER},
		update_time = #{updateTime,jdbcType=TIMESTAMP}
		where role_id = #{roleId,jdbcType=INTEGER}
	</update>
	<select id="selectRolesByUserId" resultMap="BaseResultMap">
		select r.* from role r,user_role ur where ur.user_id=#{userId} and
		ur.role_id=r.role_id
	</select>
	<select id="findTotalCount" resultType="java.lang.Integer">
		select count(0) from role
	</select>
	<select id="findAll" resultMap="BaseResultMap">
			select * from role order by create_time desc limit #{offset},#{pageSize}
	</select>
	<insert id="insertOrUpdate">
	insert into role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				role_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="roleKey != null">
				role_key,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="roleKey != null">
				#{roleKey,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
		ON DUPLICATE KEY UPDATE
			update_time=values(update_time),
			name=values(name),
			description=values(description),
			status=values(status)
	</insert>
</mapper>